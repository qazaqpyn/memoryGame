{"version":3,"sources":["components/Board.js","components/Score.js","components/List.js","App.js","index.js"],"names":["Board","props","className","onClick","pressNumber","showingNumbers","Score","score","bestScore","List","useState","setList","setShowingNumbers","userNumbers","setUserNumbers","lost","setLost","setScore","setBestScore","getNumbers","listR","i","number","Math","floor","random","includes","push","getShowingNumbers","listN","useEffect","console","log","length","e","target","innerText","list","Object","assign","parseInt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAYeA,MAVf,SAAeC,GACX,OACI,sBAAKC,UAAU,eAAf,UACI,mBAAGC,QAASF,EAAMG,YAAlB,SAAgCH,EAAMI,eAAe,KACrD,mBAAGF,QAASF,EAAMG,YAAlB,SAAgCH,EAAMI,eAAe,KACrD,mBAAGF,QAASF,EAAMG,YAAlB,SAAgCH,EAAMI,eAAe,SCOlDC,MAXf,SAAeL,GAEX,OACI,sBAAKC,UAAU,SAAf,UACI,8CACA,wCAAWD,EAAMM,SACjB,6CAAgBN,EAAMO,iBCmEnBC,MAxEf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACCC,GADD,aAEgCD,mBAAS,IAFzC,mBAELL,EAFK,KAEWO,EAFX,OAG0BF,mBAAS,IAHnC,mBAGLG,EAHK,KAGQC,EAHR,OAIYJ,oBAAS,GAJrB,mBAILK,EAJK,KAICC,EAJD,OAKcN,mBAAS,GALvB,mBAKLH,EALK,KAKEU,EALF,OAMsBP,mBAAS,GAN/B,mBAMLF,EANK,KAMMU,EANN,KAQNC,EAAa,WAEf,IADA,IAAIC,EAAQ,GACHC,EAAI,EAAGA,EAAG,GAAIA,IAAK,CAExB,IADA,IAAIC,EAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KAC7CJ,EAAMM,SAASJ,IACjBA,EAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KAEnDJ,EAAMO,KAAKL,GAEfX,EAAQS,GACRJ,GAAQ,IAGNY,EAAoB,WAEtB,IADA,IAAIC,EAAQ,GACHR,EAAI,EAAGA,EAAG,EAAGA,IAAK,CAEvB,IADA,IAAIC,EAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KAC7CK,EAAMH,SAASJ,IACjBA,EAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,KAEnDK,EAAMF,KAAKL,GAEfV,EAAkBiB,IAiCtB,OAdAC,qBAAU,WACNX,IACAS,MACF,IAEFE,qBAAU,WACNX,MACF,CAACJ,IAEHe,qBAAU,WACFF,MACN,CAACf,IAIC,gCACKkB,QAAQC,IAAInB,GACb,cAAC,EAAD,CAAON,MAAOM,EAAYoB,OAAQzB,UAAWA,IAC7C,cAAC,EAAD,CAAOH,eAAgBA,EAAgBD,YAlC3B,SAAC8B,GACjBH,QAAQC,IAAIE,EAAEC,OAAOC,WACrB,IAAMC,EAAOC,OAAOC,OAAO,GAAG1B,GAC1BwB,EAAKX,SAASc,SAASN,EAAEC,OAAOC,aAK7B5B,EAAUD,GACTW,EAAaX,EAAM,GAEvBS,GAAQ,GACRF,EAAe,MARfuB,EAAKV,KAAKa,SAASN,EAAEC,OAAOC,YAC5BtB,EAAeuB,GACfpB,EAASJ,EAAYoB,gB,MChClBQ,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c76ca9e3.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Board(props) {\n    return (\n        <div className=\"boardNumbers\">\n            <p onClick={props.pressNumber}>{props.showingNumbers[0]}</p>\n            <p onClick={props.pressNumber}>{props.showingNumbers[1]}</p>\n            <p onClick={props.pressNumber}>{props.showingNumbers[2]}</p>\n        </div>\n    )\n}\n\nexport default Board\n","\nimport React, {useState} from 'react'\n\nfunction Score(props) {\n\n    return (\n        <div className=\"header\">\n            <h1>Digit Memory</h1>\n            <p>Score: {props.score}</p>\n            <p>Best Score: {props.bestScore}</p>\n        </div>\n    )\n}\n\nexport default Score\n","import React, {useEffect, useState} from 'react'\nimport Board from './Board'\nimport Score from './Score'\n\nfunction List() {\n    const [list, setList] = useState([]);\n    const [showingNumbers, setShowingNumbers] = useState([]);\n    const [userNumbers, setUserNumbers] = useState([]);\n    const [lost, setLost] = useState(false);\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n\n    const getNumbers = () => {\n        let listR = []\n        for (let i = 0; i< 20; i++) {\n            let number = Math.floor(Math.random() * Math.floor(50));\n            while(listR.includes(number)){\n                number = Math.floor(Math.random() * Math.floor(50));\n            }\n            listR.push(number);\n        }\n        setList(listR);\n        setLost(false);\n    }\n\n    const getShowingNumbers = () => {\n        let listN = []\n        for (let i = 0; i< 3; i++) {\n            let number = Math.floor(Math.random() * Math.floor(20));\n            while(listN.includes(number)){\n                number = Math.floor(Math.random() * Math.floor(20));\n            }\n            listN.push(number);\n        }\n        setShowingNumbers(listN);\n    }\n\n    const pressNumber = (e) => {\n        console.log(e.target.innerText);\n        const list = Object.assign([],userNumbers);\n        if(!list.includes(parseInt(e.target.innerText))) {\n            list.push(parseInt(e.target.innerText));\n            setUserNumbers(list);\n            setScore(userNumbers.length);\n        } else {\n            if(bestScore<score) {\n                setBestScore(score+1);\n            }\n            setLost(true);\n            setUserNumbers([]);\n        }\n    }\n\n    useEffect(()=>{\n        getNumbers();\n        getShowingNumbers();\n    },[]);\n\n    useEffect(()=>{\n        getNumbers();\n    },[lost]);\n\n    useEffect(()=>{\n            getShowingNumbers();\n    },[userNumbers]);\n\n\n    return (\n        <div>\n            {console.log(userNumbers)}\n            <Score score={userNumbers.length} bestScore={bestScore}/>\n            <Board showingNumbers={showingNumbers} pressNumber={pressNumber}/>\n        </div>\n    )\n}\n\nexport default List\n","import List from './components/List'\nimport './style.css'\n\nfunction App() {\n  return (\n    <div >\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}